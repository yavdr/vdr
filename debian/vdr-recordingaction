#!/usr/bin/env bash
#
# VDR Recording Action Script  - Tobias Grimm <tg@e-tobi.net>
# ---------------------------
#
# This script gets executed by VDR before a recording starts, after a
# recording ends and after a recording has been edited.
# In order to allow other addons to hook into this process, this script will
# search for any executables in /usr/share/vdr/recording-hooks. These
# hooks are called in their alphabetical order and should follow this
# naming scheme:
#
# R<XX>.<identifier>
#
# Where <XX> is a two digit number, that mainly specifies the execution order
# and <identifier> is a unique descriptor.
#
# Two parameters are passed to each recording hook:
#
# Parameter 1 can have the values "before", "after" and "edited", depending
# on whether the recording hook is called before the recording starts,
# after the recording ends or after the recording has been edited.
#
# Parameter 2 is the directory of the recording. Be aware, that this directory
# doesn't exist before the recording starts.
#
# VERSION=230415

SELF="$(readlink /proc/$$/fd/255)" || SELF="$0"  # Path ($0)
SELF_NAME="${SELF##*/}"                          # Scriptname
REC_HOOKS_DIR='/usr/share/vdr/recording-hooks'

shopt -s nullglob  # In case of no matches

for rec_hook in "${REC_HOOKS_DIR}"/R[0-9][0-9].* ; do  # Only match 'R<XX>.<identifier>'
  case $1 in
    before|after)
      action="$1 recording $2"
      ;;
    edited)
      action="after cutting recording $2 from $3"
      ;;
    esac
    if [[ -x "$rec_hook" ]] ; then
      logger -t "$SELF_NAME" "Executing $rec_hook $action"
      "$rec_hook" "$@"
    else
      logger -t "$SELF_NAME" "Executing $rec_hook $action as shell script"
      /usr/bin/sh "$rec_hook" "$@"
    fi
    [[ $? -ne 0 ]] && logger -t "$SELF_NAME" "Error when executing $rec_hook"
done
